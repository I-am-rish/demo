{"version":3,"file":"static/js/533.5bb964d5.chunk.js","mappings":"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","sources":["components/pages/category/editCategory.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport LayoutPage from \"../Layout\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { useFormik } from \"formik\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\n// import LoadingOverlay from \"react-loading-overlay\";\nimport * as Yup from \"yup\";\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport TextField from \"@mui/material/TextField\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\n// LoadingOverlay.propTypes = undefined;\n\nfunction EditCategory() {\n  const { id } = useParams();\n\n  const [disabledSubmit, setDisabledSubmit] = useState(false);\n  const [categoryData, setCategoryData] = useState([]);\n  const [usersData, setUsersData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [valueStart, setValueStart] = useState(new Date());\n  const [valueEnd, setValueEnd] = useState(null);\n  const [minDateTimeValueStart, setMinDateTimeValueStart] = useState(\n    dayjs(moment().format(\"YYYY-MM-DDTHH:mm\"))\n  );\n  const [maxDateTimeValueStart, setMaxDateTimeValueStart] = useState(null);\n  const [minDateTimeValueEnd, setMinDateTimeValueEnd] = useState(\n    dayjs(moment().format(\"YYYY-MM-DDTHH:mm\"))\n  );\n  const [renderPage, setRenderPage] = useState(0);\n  const [initialValues, setInitialValues] = useState({\n    id: \"\",\n    sportName: \"\",\n    sportLogo: \"\",\n    // banner_image: \"\",\n    // start_date: \"\",\n    // end_date: \"\",\n  });\n  const navigate = useNavigate();\n\n  const handleCloseBtn = () => {\n    navigate(\"/category\");\n  };\n\n  const getCategoryDetail = useCallback(async () => {\n    try {\n      setLoading(true);\n      let res = await axios.get(`admin/getSportsCategory/${id}`);\n      setCategoryData(res.data.data);\n      setUsersData(res.data.data);\n\n      setInitialValues({\n        id: res.data.data._id,\n        sportName: res.data.data.sportName,\n        // start_date: res.data.result.ad_data.start_time,\n        // end_date: res.data.result.ad_data.end_time,\n        sportLogo: res.data.data.sportLogo,\n      });\n      // setValueStart(res.data.result.ad_data.start_time);\n      // setValueEnd(res.data.result.ad_data.end_time);\n      setLoading(false);\n    } catch (errors) {\n      toast(errors.response.data.message, {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        type: \"error\",\n      });\n    }\n  }, [renderPage]);\n\n  const validationSchema = Yup.object({\n    sportName: Yup.string().required(\"Please choose a sport name\"),\n    sportLogo: Yup.string().required(\"Sport Link is required\"),\n    // .matches(\n    //   /^((ftp|http|https):\\/\\/)?(www.)?(?!.*(ftp|http|https|www.))[a-zA-Z0-9_-]+(\\.[a-zA-Z]+)+((\\/)[\\w#]+)*(\\/\\w+\\?[a-zA-Z0-9_]+=\\w+(&[a-zA-Z0-9_]+=\\w+)*)?$/gm,\n    //   \"Please enter valida url\"\n    // ),\n  });\n  const formik = useFormik({\n    initialValues: initialValues,\n    enableReinitialize: true,\n    validationSchema,\n    onSubmit: async (values) => {\n      console.log(\"valllllllll\", values);\n      setDisabledSubmit(true);\n      try {\n        let formData = new FormData();\n        formData.append(\"sportLogo\", values.sportLogo);\n        formData.append(\"sportName\", values.sportName);\n        console.log(\"formDATA\", values.sportLogo);\n        let res = await axios.patch(\n          `admin/updateSportsCategory/${values.id}`,\n          formData\n        );\n        console.log(\"res ==> \", res);\n        setRenderPage(Math.random());\n        setDisabledSubmit(false);\n        toast(res.data.message, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          type: \"success\",\n        });\n\n        // navigate(\"/category\", { state: { message: res.data.message } });\n      } catch (errors) {\n        if (errors.response.data.error) {\n          toast(errors.response.data.error.message, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            type: \"error\",\n          });\n        }\n        setDisabledSubmit(false);\n      }\n    },\n  });\n\n  useEffect(() => {\n    getCategoryDetail();\n  }, [getCategoryDetail]);\n  return (\n    <>\n      <Helmet>\n        <title>Edit Category </title>\n      </Helmet>\n\n      <LayoutPage>\n        <div className=\"row\">\n          {/* <LoadingOverlay active={loading} spinner text=\"Loading...\"> */}\n          <div className=\"col-12\">\n            <div className=\"card my-4\">\n              <div className=\"card-header p-0 position-relative mt-n4 mx-3 z-index-2\">\n                <div\n                  style={{\n                    backgroundColor: \"#46456e\",\n                  }}\n                  className=\"shadow-primary border-radius-lg pt-0 pb-0 \"\n                >\n                  <h6 className=\"text-white text-capitalize ps-3\">\n                    {/* Edit Category */}\n                    <div className=\"d-flex justify-content-between align-item-end py-3 px-4\">\n                      Edit Category{\" \"}\n                      <i\n                        className=\"fa fa-close fonts\"\n                        style={{\n                          cursor: \"pointer\",\n                        }}\n                        onClick={handleCloseBtn}\n                      ></i>\n                    </div>\n                  </h6>\n                </div>\n              </div>\n              <div className=\"card-body px-0 pb-2\">\n                <div className=\"p-4\">\n                  <form onSubmit={formik.handleSubmit}>\n                    <div className=\"input-group input-group-outline mb-3\">\n                      <img\n                        src={usersData.sportLogo}\n                        alt=\"logo\"\n                        style={{\n                          width: \"100px\",\n                          marginBottom: \"15px\",\n                        }}\n                      />\n                      <input\n                        style={{ width: \"100%\" }}\n                        type=\"file\"\n                        id=\"sportLogo\"\n                        name=\"sportLogo\"\n                        className=\"form-control\"\n                        placeholder=\"sport Logo\"\n                        onChange={(event) => {\n                          formik.setFieldValue(\n                            \"sportLogo\",\n                            // setformImage(event.target.files[0]),\n                            event.target.files[0]\n                          );\n                        }}\n                      />\n                    </div>\n                    {formik.errors.sportLogo ? (\n                      <div className=\"text-danger\">\n                        {formik.errors.sportLogo}\n                      </div>\n                    ) : null}\n\n                    <div className=\"input-group input-group-outline mb-3\">\n                      <input\n                        type=\"text\"\n                        id=\"sportName\"\n                        name=\"sportName\"\n                        className=\"form-control\"\n                        placeholder=\"Sport Name\"\n                        value={formik.values.sportName || \"\"}\n                        onChange={formik.handleChange}\n                      />\n                    </div>\n                    {formik.errors.sportName ? (\n                      <div className=\"text-danger\">\n                        {formik.errors.sportName}\n                      </div>\n                    ) : null}\n\n                    <div className=\"text-center\">\n                      {/* <Link\n                        to={\"/category\"}\n                        className=\"btn btn-lg bg-gradient-primary btn-lg w-20 mt-4 mb-0\"\n                        disabled={disabledSubmit}\n                      >\n                        Cancel\n                      </Link> */}\n                      &nbsp;&nbsp;\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-lg  btn-lg w-20 mt-4 mb-0\"\n                        disabled={disabledSubmit}\n                        style={{\n                          backgroundColor: \"#46456e\",\n                          color: \"#fff\",\n                        }}\n                      >\n                        {disabledSubmit ? (\n                          <div>\n                            <span\n                              className=\"spinner-border spinner-border-sm\"\n                              role=\"status\"\n                              aria-hidden=\"true\"\n                            ></span>\n                            <span className=\"sr-only\"></span> Submitting\n                          </div>\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* </LoadingOverlay> */}\n        </div>\n      </LayoutPage>\n    </>\n  );\n}\n\nexport default EditCategory;\n"],"names":["id","useParams","disabledSubmit","setDisabledSubmit","useState","categoryData","setCategoryData","usersData","setUsersData","loading","setLoading","valueStart","setValueStart","Date","valueEnd","setValueEnd","minDateTimeValueStart","setMinDateTimeValueStart","dayjs","moment","format","maxDateTimeValueStart","setMaxDateTimeValueStart","minDateTimeValueEnd","setMinDateTimeValueEnd","renderPage","setRenderPage","initialValues","setInitialValues","sportName","sportLogo","navigate","useNavigate","getCategoryDetail","useCallback","async","res","axios","concat","data","_id","errors","toast","response","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","validationSchema","Yup","required","formik","useFormik","enableReinitialize","onSubmit","console","log","values","formData","FormData","append","Math","random","error","useEffect","_jsxs","_Fragment","children","_jsx","Helmet","LayoutPage","className","style","backgroundColor","cursor","onClick","handleCloseBtn","handleSubmit","src","alt","width","marginBottom","name","placeholder","onChange","event","setFieldValue","target","files","value","handleChange","disabled","color","role"],"sourceRoot":""}