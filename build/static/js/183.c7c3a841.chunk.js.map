{"version":3,"file":"static/js/183.c7c3a841.chunk.js","mappings":"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","sources":["components/pages/shared/DeleteConfirmation.jsx","components/pages/category/list.jsx"],"sourcesContent":["import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nfunction DeleteConfirmation({\n    modelTitle,\n    loadingConfirmButton,\n    loadingConfirmButtonText,\n    showModalHandler,\n    hideModalHandler,\n    confirmModalHandler,\n    actionButtonClass,\n    message,\n    actionType,\n}) {\n    return (\n        <>\n            <Modal show={showModalHandler} onHide={hideModalHandler}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{modelTitle}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div>{message.charAt(0).toUpperCase() + message.slice(1).toLowerCase()}</div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"default\" onClick={hideModalHandler}>\n                        Cancel\n                    </Button>\n                    <Button\n                        disabled={loadingConfirmButton}\n                        variant={actionButtonClass}\n                        onClick={confirmModalHandler}\n                    >\n                        {loadingConfirmButton ? (\n                            <>\n                                <span\n                                    className=\"spinner-border spinner-border-sm\"\n                                    role=\"status\"\n                                    aria-hidden=\"true\"\n                                ></span>\n                                <span className=\"sr-only\"></span> {loadingConfirmButtonText}\n                            </>\n                        ) : (\n                            actionType\n                        )}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default DeleteConfirmation;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport LayoutPage from \"../Layout\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport DataTable from \"react-data-table-component\";\nimport DeleteConfirmation from \"../shared/DeleteConfirmation\";\nimport { Switch } from \"@mui/material\";\n\nfunction List() {\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const [categoryData, setCategoryData] = useState(\"\");\n  const [totalRows, setTotalRows] = useState(0);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [perPage, setperPage] = useState(10);\n  const [loadingDeleteModel, setLoadingDeleteModel] = useState(false);\n  const [loadingDeleteModelConfirmText, setLoadingDeleteModelConfirmText] =\n    useState(\"Deleting\");\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [idBeingDeleting, setIdBeingDeleting] = useState(null);\n  const [deleteModelTitle, setDeleteModelTitle] = useState(\"Confirm Delete\");\n  const [deleteModelMessage, setDeleteModelMessage] = useState(\n    \"Are you sure want to delete this advertise?\"\n  );\n  const [deleteModelActionType, setDeleteModelActionType] = useState(\"Delete\");\n\n  const [status, setStatus] = useState(false);\n  const navigate = useNavigate();\n  const handleToggle = (event) => {\n    console.log(\"toggle\", event.target.id);\n\n    if (!event.target.checked) {\n      //\n      axios\n        .patch(`/admin/updateSportsCategoryStatus/${event.target.id}/false`)\n        .then((res) => {\n          setStatus(Math.random());\n        });\n    } else {\n      axios\n        .patch(`/admin/updateSportsCategoryStatus/${event.target.id}/true`)\n        .then((res) => {\n          setStatus(Math.random());\n        });\n    }\n  };\n\n  const handleSelect = (e) => {\n    // console.log(\"selected value ==> \", e.target.id);\n    navigate(`/category/${e.target.value}/${e.target.id}`);\n  };\n\n  const handleEditButton = (e) => {\n    console.log(\"eee\", e.target.id);\n    navigate(`/category/editcategory/${e.target.id}`);\n  };\n\n  const columns = [\n    {\n      name: \"Sport Logo\",\n      selector: (row) => row.sportLogo,\n      cell: (row) => (\n        <img\n          className=\"img img-circle\"\n          height={50}\n          width={50}\n          src={row.sportLogo}\n          alt={row.sportLogo}\n        />\n      ),\n      center: true,\n    },\n    {\n      name: \"Sport Name\",\n      selector: (row) => row.sportName,\n    },\n    {\n      name: \"Active\",\n      selector: (row) => (\n        <Switch id={row._id} checked={row.isActive} onChange={handleToggle} />\n      ),\n    },\n    {\n      name: \"Created At\",\n      selector: (row) => row.createdAt.substring(0, 10),\n    },\n    {\n      name: \"Updated At\",\n      selector: (row) => row.updatedAt.substring(0, 10),\n    },\n    {\n      name: \"Action\",\n      selector: (row) => row.id,\n      cell: (row) => (\n        <select\n          onChange={(e) => {\n            handleSelect(e);\n          }}\n          id={row._id}\n          style={{\n            border: \"none\",\n            width: \"75px\",\n            padding: \"10px 0px\",\n            fontSize: \"1.2rem\",\n            outline: \"none\",\n            background: \"transparent\",\n            opacity: \".6\",\n          }}\n        >\n          <option disabled selected>\n            select\n          </option>\n          <option value=\"prediction\">Predictions</option>\n          <option value=\"ranking\">Rankings</option>\n          <option value=\"contest\">Contest</option>\n        </select>\n      ),\n      center: true,\n    },\n    {\n      name: \"\",\n      selector: (row) => (\n        <i\n          className=\"EditButton fa fa-edit fonts\"\n          onClick={handleEditButton}\n          style={{ color: \"green\", cursor: \"pointer\" }}\n          id={row._id}\n        ></i>\n      ),\n    },\n  ];\n\n  const getCategoryData = useCallback(async () => {\n    try {\n      setLoading(true);\n      const res = await axios\n        .get(\n          `/admin/getAllSportsCategory?pageNumber=${pageNumber}&pageSize=${perPage}&search=`\n        )\n        .then((res) => res.data.data.result)\n        .then((data) => {\n          setCategoryData(data);\n          setTotalRows(data.length);\n          setLoading(false);\n        });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }, [pageNumber, status]);\n\n  const handlePageChange = (page) => {\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    setPageNumber(page);\n    setperPage(newPerPage);\n  };\n\n  // const handleDeleteConfirm = (row, type) => {\n  //   setShowDeleteConfirm(true);\n  //   setDeleteModelTitle(`Confirm ${type}`);\n  //   setDeleteModelMessage(`Are you sure want to ${type} this category?`);\n  //   setDeleteModelActionType(type);\n  //   setIdBeingDeleting(row._id);\n  // };\n\n  const showDeleteModal = (type, id) => {\n    alert(\"show delete modal\");\n  };\n\n  const hideConfirmationModal = () => {\n    setShowDeleteConfirm(false);\n    setIdBeingDeleting(null);\n  };\n\n  const submitDelete = async () => {\n    setLoadingDeleteModel(true);\n    setLoadingDeleteModelConfirmText(\"Deleting\");\n    //  activate deactivate user\n    try {\n      let res = await axios.delete(\n        `admin/advertisement/del/${idBeingDeleting}`\n      );\n      toast(res.data.message, {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        type: \"success\",\n      });\n      setShowDeleteConfirm(false);\n      setLoadingDeleteModel(false);\n      setPageNumber(1);\n      getCategoryData();\n    } catch (errors) {\n      toast(errors.response.data.message, {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        type: \"error\",\n      });\n      setShowDeleteConfirm(false);\n      setLoadingDeleteModel(false);\n      setPageNumber(1);\n      getCategoryData();\n    }\n  };\n\n  useEffect(() => {\n    getCategoryData();\n    if (location.state) {\n      let msg = location.state.message;\n      window.history.replaceState({}, document.title);\n      navigate(location.pathname, { replace: true });\n      toast(msg, {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        type: \"success\",\n      });\n    }\n  }, [location, getCategoryData]);\n\n  const customStyle = {\n    header: {\n      style: {\n        border: \"1px solid gray\",\n      },\n    },\n    headRow: {\n      style: {\n        fontSize: \"1.2rem\",\n        border: \"1px solid gray\",\n        backgroundColor: \"#8180a6\",\n      },\n    },\n    rows: {\n      style: {\n        fontSize: \"1.2rem\",\n        border: \"1px solid gray\",\n      },\n    },\n    pagination: {\n      style: {\n        fontSize: \"1.2rem\",\n        border: \"1px solid gray\",\n        backgroundColor: \"#8180a6\",\n      },\n    },\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Category Management</title>\n      </Helmet>\n      <LayoutPage>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card my-4\">\n              <div className=\"card-header p-0 position-relative mt-n4 mx-3 z-index-2\">\n                <div\n                  style={{\n                    backgroundColor: \"#46456e\",\n                  }}\n                  className=\"shadow-primary border-radius-lg d-flex justify-content-between pt-4\"\n                >\n                  <div className=\"d-flex ps-3\">\n                    <i\n                      style={{ color: \"#fff\", cursor: \"pointer\" }}\n                      className=\"fa fa-arrow-left fs-4\"\n                      onClick={() => {\n                        navigate(\"/dashboard\");\n                      }}\n                    ></i>\n                    <h6 className=\"text-white text-capitalize ps-4 \">\n                      CATEGORY\n                    </h6>\n                  </div>\n                  <Link\n                    to=\"/category/addcategory\"\n                    title=\"Add New\"\n                    className=\"btn btn-rounded btn-icon custom-add-new-button\"\n                  >\n                    <i className=\"fa fa-plu\">New Category</i>\n                  </Link>\n                </div>\n              </div>\n              <div className=\"card-body px-0 pb-2\">\n                <div className=\"p-4\">\n                  <div className=\"input-group input-group-dynamic\">\n                    &nbsp; &nbsp;\n                  </div>\n                  <div className=\"table-responsive p-0\">\n                    <DataTable\n                      columns={columns}\n                      data={categoryData}\n                      progressPending={loading}\n                      pagination\n                      paginationServer\n                      paginationTotalRows={totalRows}\n                      onChangeRowsPerPage={handlePerRowsChange}\n                      onChangePage={handlePageChange}\n                      sortServer\n                      customStyles={customStyle}\n                    />\n\n                    {showDeleteConfirm && (\n                      <DeleteConfirmation\n                        showModalHandler={showDeleteModal}\n                        confirmModalHandler={submitDelete}\n                        hideModalHandler={hideConfirmationModal}\n                        loadingConfirmButton={loadingDeleteModel}\n                        loadingConfirmButtonText={loadingDeleteModelConfirmText}\n                        modelTitle={deleteModelTitle}\n                        actionButtonClass={\"primary\"}\n                        actionType={deleteModelActionType}\n                        message={deleteModelMessage}\n                      />\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </LayoutPage>\n    </>\n  );\n}\n\nexport default List;\n"],"names":["_ref","modelTitle","loadingConfirmButton","loadingConfirmButtonText","showModalHandler","hideModalHandler","confirmModalHandler","actionButtonClass","message","actionType","_jsx","_Fragment","children","_jsxs","Modal","show","onHide","Header","closeButton","Title","Body","charAt","toUpperCase","slice","toLowerCase","Footer","Button","variant","onClick","disabled","className","role","location","useLocation","loading","setLoading","useState","categoryData","setCategoryData","totalRows","setTotalRows","pageNumber","setPageNumber","perPage","setperPage","loadingDeleteModel","setLoadingDeleteModel","loadingDeleteModelConfirmText","setLoadingDeleteModelConfirmText","showDeleteConfirm","setShowDeleteConfirm","idBeingDeleting","setIdBeingDeleting","deleteModelTitle","setDeleteModelTitle","deleteModelMessage","setDeleteModelMessage","deleteModelActionType","setDeleteModelActionType","status","setStatus","navigate","useNavigate","handleToggle","event","console","log","target","id","checked","axios","concat","then","res","Math","random","handleEditButton","e","columns","name","selector","row","sportLogo","cell","height","width","src","alt","center","sportName","Switch","_id","isActive","onChange","createdAt","substring","updatedAt","value","handleSelect","style","border","padding","fontSize","outline","background","opacity","selected","color","cursor","getCategoryData","useCallback","async","data","result","length","error","useEffect","state","msg","window","history","replaceState","document","title","pathname","replace","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","Helmet","LayoutPage","backgroundColor","Link","to","DataTable","progressPending","pagination","paginationServer","paginationTotalRows","onChangeRowsPerPage","newPerPage","page","onChangePage","sortServer","customStyles","header","headRow","rows","DeleteConfirmation","showDeleteModal","alert","errors","response","hideConfirmationModal"],"sourceRoot":""}