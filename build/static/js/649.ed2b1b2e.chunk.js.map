{"version":3,"file":"static/js/649.ed2b1b2e.chunk.js","mappings":"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","sources":["components/auth/ChangePassword.jsx"],"sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport LayoutPage from '../pages/Layout';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useFormik } from 'formik';\nimport { useState } from 'react';\nimport * as Yup from 'yup'\nimport '../styles/Login.css'\n\nfunction AddNew() {\n  const [disabledSubmit, setDisabledSubmit] = useState(false);\n  const [disabledEmailSubmit, setDisabledEmailSubmit] = useState(false);\n  const [showOldPassword, setShowOldPassword] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const validationSchema = Yup.object({\n    old_password: Yup.string().required(\"Old password is required\"),\n    new_password: Yup.string()\n      .required(\"New password is required\")\n      .min(8, \"New password must be 8 characters long\")\n      .max(15, \"New password must not exceed 15 characters long\")\n      .matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])/,\n        \"New password must contain one uppercase, one lowercase, one number and one special character\"\n      ),\n    confirm_password: Yup.string()\n      .required(\"Confirm password is required\")\n      .oneOf(\n        [Yup.ref(\"new_password\"), null],\n        \"New password and confirm password must match\"\n      ),\n  });\n  const validationSchemaEmail = Yup.object({\n    email: Yup.string()\n      .required(\"Email is required\")\n      .email(\"Email must be a valid email\"),\n  });\n  // const logUserEmail = JSON.parse(localStorage.getItem(angolosport_auth_back)).email\n  // console.log(logUserEmail);\n  const formikEmail = useFormik({\n    initialValues: {\n      email: JSON.parse(localStorage.getItem(\"angolosport_auth_back\")).email,\n    },\n    validationSchema: validationSchemaEmail,\n    onSubmit: async (values) => {\n      setDisabledEmailSubmit(true);\n      try {\n        let user = JSON.parse(localStorage.getItem('angolosport_auth_back'));\n        user.email = values.email;\n        localStorage.setItem(\"angolosport_auth_back\", JSON.stringify(user));\n        let res = await axios.post(`admin/change-password`, {\n          only_email: true,\n          email: values.email,\n        });\n        setDisabledEmailSubmit(false);\n        toast(res.data.message, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          type: \"success\",\n        });\n      } catch (errors) {\n        if (errors.response.data.error) {\n          toast(errors.response.data.error.message, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            type: \"error\",\n          });\n        } else {\n          toast(errors.response.data.message, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            type: \"error\",\n          });\n        }\n        setDisabledEmailSubmit(false);\n      }\n    },\n  });\n  const formik = useFormik({\n    initialValues: {\n      old_password: \"\",\n      new_password: \"\",\n      confirm_password: \"\",\n    },\n    validationSchema,\n    onSubmit: async (values, { resetForm }) => {\n      setDisabledSubmit(true);\n      try {\n        let res = await axios.post(`admin/change-password`, values);\n        resetForm();\n        setDisabledSubmit(false);\n        toast(res.data.message, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          type: \"success\",\n        });\n      } catch (errors) {\n        if (errors.response.data.error) {\n          toast(errors.response.data.error.message, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            type: \"error\",\n          });\n        } else {\n          toast(errors.response.data.message, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            type: \"error\",\n          });\n        }\n\n        setDisabledSubmit(false);\n      }\n    },\n  });\n  const showhidePassword = () => {\n    setShowOldPassword(!showOldPassword);\n  };\n\n  const showhideNewPassword = () => {\n    setShowNewPassword(!showNewPassword);\n  };\n  const showhideConfirmPassword = () => {\n    setShowConfirmPassword(!showConfirmPassword);\n  };\n  return (\n    <>\n      <Helmet>\n        <title>Update Profile</title>\n      </Helmet>\n      <LayoutPage>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card my-4\">\n              <div className=\"card-header p-0 position-relative mt-n4 mx-3 z-index-2\">\n                <div className=\"bg-gradient-primary shadow-primary border-radius-lg pt-4 pb-3\">\n                  <h6 className=\"text-white text-capitalize ps-3\">\n                    Update Profile\n                  </h6>\n                </div>\n              </div>\n              <div className=\"card-body px-0 pb-2\">\n                <div className=\"p-4\">\n                  <form onSubmit={formikEmail.handleSubmit}>\n                    <div className=\"input-group input-group-outline mb-3\">\n                      <input\n                        type=\"text\"\n                        id=\"email\"\n                        name=\"email\"\n                        className=\"form-control\"\n                        placeholder=\"Email Address\"\n                        readOnly\n                        value={formikEmail.values.email || \"\"}\n                        onChange={formikEmail.handleChange}\n                      />\n                    </div>\n                    {formikEmail.errors.email ? (\n                      <div className=\"text-danger\">\n                        {formikEmail.errors.email}\n                      </div>\n                    ) : null}\n                    {/* <div className=\"text-left\">\n                                            <button type=\"submit\" className=\"btn btn-lg bg-gradient-primary btn-lg w-20 mt-4 mb-0\" disabled={disabledEmailSubmit}>\n                                                {\n                                                    disabledEmailSubmit ? (\n                                                        <div>\n                                                            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                                                            <span className=\"sr-only\"></span>  Updating\n                                                        </div>\n                                                    ) : 'Update'\n                                                }\n                                            </button>\n                                        </div> */}\n                  </form>\n                  <br />\n                  <form onSubmit={formik.handleSubmit}>\n                    <div className=\"input-group input-group-outline mb-3 pas-eye\">\n                      <input\n                        type={showOldPassword ? \"text\" : \"password\"}\n                        id=\"old_password\"\n                        name=\"old_password\"\n                        className=\"form-control\"\n                        placeholder=\"Old Password\"\n                        value={formik.values.old_password || \"\"}\n                        onChange={formik.handleChange}\n                      />\n                      <i\n                        className={\n                          showOldPassword ? \"fas fa-eye\" : \"fas fa-eye-slash\"\n                        }\n                        onClick={() => showhidePassword()}\n                      ></i>\n                    </div>\n                    {formik.errors.old_password ? (\n                      <div className=\"text-danger\">\n                        {formik.errors.old_password}\n                      </div>\n                    ) : null}\n                    <div className=\"input-group input-group-outline mb-3 pas-eye\">\n                      <input\n                        type={showNewPassword ? \"text\" : \"password\"}\n                        id=\"new_password\"\n                        name=\"new_password\"\n                        className=\"form-control\"\n                        placeholder=\"New Password\"\n                        value={formik.values.new_password || \"\"}\n                        onChange={formik.handleChange}\n                      />\n                      <i\n                        className={\n                          showNewPassword ? \"fas fa-eye\" : \"fas fa-eye-slash\"\n                        }\n                        onClick={() => showhideNewPassword()}\n                      ></i>\n                    </div>\n                    {formik.errors.new_password ? (\n                      <div className=\"text-danger\">\n                        {formik.errors.new_password}\n                      </div>\n                    ) : null}\n                    <div className=\"input-group input-group-outline mb-3 pas-eye\">\n                      <input\n                        type={showConfirmPassword ? \"text\" : \"password\"}\n                        id=\"confirm_password\"\n                        name=\"confirm_password\"\n                        className=\"form-control\"\n                        placeholder=\"Confirm Password\"\n                        value={formik.values.confirm_password || \"\"}\n                        onChange={formik.handleChange}\n                      />\n                      <i\n                        className={\n                          showConfirmPassword\n                            ? \"fas fa-eye\"\n                            : \"fas fa-eye-slash\"\n                        }\n                        onClick={() => showhideConfirmPassword()}\n                      ></i>\n                    </div>\n                    {formik.errors.confirm_password ? (\n                      <div className=\"text-danger\">\n                        {formik.errors.confirm_password}\n                      </div>\n                    ) : null}\n                    <div className=\"text-center\">\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-lg bg-gradient-primary btn-lg w-20 mt-4 mb-0\"\n                        disabled={disabledSubmit}\n                      >\n                        {disabledSubmit ? (\n                          <div>\n                            <span\n                              className=\"spinner-border spinner-border-sm\"\n                              role=\"status\"\n                              aria-hidden=\"true\"\n                            ></span>\n                            <span className=\"sr-only\"></span> Submitting\n                          </div>\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </LayoutPage>\n    </>\n  );\n}\n\nexport default AddNew;"],"names":["disabledSubmit","setDisabledSubmit","useState","disabledEmailSubmit","setDisabledEmailSubmit","showOldPassword","setShowOldPassword","showNewPassword","setShowNewPassword","showConfirmPassword","setShowConfirmPassword","validationSchema","Yup","old_password","required","new_password","min","max","matches","confirm_password","oneOf","validationSchemaEmail","email","formikEmail","useFormik","initialValues","JSON","parse","localStorage","getItem","onSubmit","async","user","values","setItem","stringify","res","axios","only_email","toast","data","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","errors","response","error","formik","_ref","resetForm","_jsxs","_Fragment","children","_jsx","Helmet","LayoutPage","className","handleSubmit","id","name","placeholder","readOnly","value","onChange","handleChange","onClick","disabled","role"],"sourceRoot":""}