{"version":3,"file":"static/js/138.6c6a665e.chunk.js","mappings":"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","sources":["components/pages/User/list.jsx"],"sourcesContent":["import React, { useCallback, useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport LayoutPage from \"../Layout\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport DataTable from \"react-data-table-component\";\nimport Switch from \"@mui/material/Switch\";\nimport swal from \"sweetalert2\";\n\nfunction List() {\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const [categoryData, setCategoryData] = useState(\"\");\n  const [totalRows, setTotalRows] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [row, setRow] = useState([]);\n  const [id, setId] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handlePerRowsChange = (number) => {\n    setPageSize(number);\n  };\n\n  const handlePageChange = (number) => {\n    setPageNumber(number);\n  };\n\n  const handleDeleteUser = (e) => {\n    swal\n      .fire({\n        title: \"Are you sure?\",\n        text: \"You will not be able to revert this!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"Yes, delete it!\",\n      })\n      .then((res) => {\n        if (res.isConfirmed) {\n          axios.delete(`/admin/${e.target.id}`).then((res) => {});\n          setId(Math.random);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      name: \"First Name\",\n      selector: (row) => row.firstName,\n    },\n    {\n      name: \"Last Name\",\n      selector: (row) => row.lastName,\n    },\n    {\n      name: \"Email\",\n      selector: (row) => row.email,\n    },\n    {\n      name: \"Mobile\",\n      selector: (row) => row.mobileNumber,\n    },\n    {\n      name: \"Status\",\n      selector: (row) => (\n        <Switch id={row._id} checked={row.isActive} onChange={handleToggle} />\n      ),\n    },\n    {\n      name: \"Created At\",\n      selector: (row) => row.createdAt.substring(0, 10),\n    },\n    {\n      name: \"Updated At\",\n      selector: (row) => row.updatedAt.substring(0, 10),\n    },\n    {\n      name: \"Action\",\n      selector: (row) => (\n        <i\n          onClick={handleDeleteUser}\n          id={row._id}\n          className=\" fa fa-trash\"\n          style={{ cursor: \"pointer\", color: \"red\", textAlign: \"end\" }}\n        ></i>\n      ),\n    },\n  ];\n\n  const getCategoryData = useCallback(async () => {\n    try {\n      setLoading(true);\n      axios\n        .get(\n          `users/getAllUserList?pageNumber=${pageNumber}&pageSize=${pageSize}&search=`\n        )\n        .then((res) => res.data.data)\n        .then((data) => {\n          setCategoryData(data.result);\n          setTotalRows(data.result.length);\n          setRow(data);\n          setLoading(false);\n        });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }, [pageNumber, pageSize, id]);\n\n  const handleStatus = (e) => {\n    console.log(e);\n  };\n\n  const handleToggle = async (e) => {\n    // let status = false;\n    if (e.target.checked) {\n      await axios\n        .patch(`users/changeUserStatus/${e.target.id}/${true}`)\n        .then((res) => {\n          // console.log(res);\n        });\n      e.target.checked = true;\n      setId(Math.random);\n    } else {\n      await axios\n        .patch(`users/changeUserStatus/${e.target.id}/${false}`)\n        .then((res) => {\n          // console.log(res);\n        });\n      e.target.checked = false;\n      setId(Math.random);\n    }\n  };\n\n  useEffect(() => {\n    getCategoryData();\n    if (location.state) {\n      let msg = location.state.message;\n      window.history.replaceState({}, document.title);\n      navigate(location.pathname, { replace: true });\n      toast(msg, {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        type: \"success\",\n      });\n    }\n  }, [getCategoryData, pageNumber, pageSize, location]);\n\n  const customStyle = {\n    header: {\n      style: {\n        // fontSize: \"1.2rem\",\n        border: \"1px solid gray\",\n      },\n    },\n    headRow: {\n      style: {\n        fontSize: \"1.2rem\",\n        border: \"1px solid gray\",\n        backgroundColor: \"#8180a6\",\n      },\n    },\n    rows: {\n      style: {\n        fontSize: \"1.2rem\",\n        // fontWeight:\n        border: \"1px solid gray\",\n      },\n    },\n    pagination: {\n      style: {\n        fontSize: \"1.2rem\",\n        border: \"1px solid gray\",\n        backgroundColor: \"#8180a6\",\n      },\n    },\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>User Management</title>\n      </Helmet>\n      <LayoutPage>\n        {}\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card my-4\">\n              <div className=\"card-header p-0 position-relative mt-n4 mx-3 z-index-2\">\n                <div\n                  style={{\n                    backgroundColor: \"#46456e\",\n                  }}\n                  className=\" shadow-primary border-radius-lg pt-4 pb-3\"\n                >\n                  <div className=\"d-flex ps-3\">\n                    <i\n                      style={{ color: \"#fff\", cursor: \"pointer\" }}\n                      className=\"fa fa-arrow-left fs-4\"\n                      onClick={() => {\n                        navigate(\"/dashboard\");\n                      }}\n                    ></i>\n                    <h6 className=\"text-white text-capitalize ps-4 \">\n                      USER MANAGEMENT\n                    </h6>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-body px-0 pb-2\">\n                <div className=\"p-4\">\n                  <div className=\"input-group input-group-dynamic\">\n                    &nbsp; &nbsp;\n                  </div>\n                  {/* <h1>Sport Category</h1> */}\n                  <div className=\"table-responsive p-0\">\n                    <DataTable\n                      columns={columns}\n                      data={categoryData}\n                      progressPending={loading}\n                      pagination\n                      paginationServer\n                      paginationTotalRows={row.total}\n                      onChangeRowsPerPage={handlePerRowsChange}\n                      onChangePage={handlePageChange}\n                      sortServer\n                      onRowClicked={handleStatus}\n                      customStyles={customStyle}\n\n                      // onSort={handleSort}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </LayoutPage>\n    </>\n  );\n}\n\nexport default List;\n"],"names":["location","useLocation","loading","setLoading","useState","categoryData","setCategoryData","totalRows","setTotalRows","pageSize","setPageSize","pageNumber","setPageNumber","row","setRow","id","setId","navigate","useNavigate","handleDeleteUser","e","swal","title","text","icon","showCancelButton","confirmButtonText","then","res","isConfirmed","axios","concat","target","Math","random","columns","name","selector","firstName","lastName","email","mobileNumber","_jsx","Switch","_id","checked","isActive","onChange","handleToggle","createdAt","substring","updatedAt","onClick","className","style","cursor","color","textAlign","getCategoryData","useCallback","async","data","result","length","error","console","log","useEffect","state","msg","message","window","history","replaceState","document","pathname","replace","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","_jsxs","_Fragment","children","Helmet","LayoutPage","backgroundColor","DataTable","progressPending","pagination","paginationServer","paginationTotalRows","total","onChangeRowsPerPage","number","onChangePage","sortServer","onRowClicked","customStyles","header","border","headRow","fontSize","rows"],"sourceRoot":""}