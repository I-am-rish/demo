{"version":3,"file":"static/js/886.d71be465.chunk.js","mappings":"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","sources":["components/pages/category/Content.jsx"],"sourcesContent":["import React, { useCallback, useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport LayoutPage from \"../Layout\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport DataTable from \"react-data-table-component\";\n\nfunction Content() {\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const [categoryData, setCategoryData] = useState(\"\");\n  const [totalRows, setTotalRows] = useState(0);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [perPage, setperPage] = useState(10);\n  const [id, setId] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const handleContentEdit = (e) => {\n    console.log(\"content ==> \", e.target.parentNode.id);\n    navigate(`/content/edit/${e.target.parentNode.id}`);\n  };\n\n  const columns = [\n    {\n      name: \"Heading\",\n      selector: (row) => row.pageHeading,\n    },\n    {\n      name: \"Edit\",\n      selector: (row) => (\n        <span\n          onClick={handleContentEdit}\n          id={row._id}\n          title=\"Edit Content\"\n          style={{\n            cursor: \"pointer\",\n          }}\n        >\n          <i className=\"fa fa-edit fonts\"></i>\n        </span>\n      ),\n    },\n  ];\n\n  const getCategoryData = useCallback(async () => {\n    try {\n      setLoading(true);\n      const res = await axios.get(`/content`);\n      console.log(\"content data----\", res.data.data);\n      setCategoryData(res.data.data);\n      setTotalRows(res.data.data.length);\n      setLoading(false);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }, [pageNumber, perPage, id]);\n\n  const handlePageChange = (page) => {\n    setPageNumber(page);\n  };\n\n  const handleStatus = (e) => {\n    console.log(e);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    setPageNumber(page);\n    setperPage(newPerPage);\n  };\n\n  useEffect(() => {\n    getCategoryData();\n    if (location.state) {\n      let msg = location.state.message;\n      window.history.replaceState({}, document.title);\n      navigate(location.pathname, { replace: true });\n      toast(msg, {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        type: \"success\",\n      });\n    }\n  }, [getCategoryData, pageNumber, perPage, location]);\n\n  const customStyle = {\n    header: {\n      style: {\n        // fontSize: \"1.2rem\",\n        border: \"1px solid gray\",\n      },\n    },\n    headRow: {\n      style: {\n        fontSize: \"1.2rem\",\n        border: \"1px solid gray\",\n        backgroundColor: \"#8180a6\",\n      },\n    },\n    rows: {\n      style: {\n        fontSize: \"1.2rem\",\n        // fontWeight:\n        border: \"1px solid gray\",\n      },\n    },\n    pagination: {\n      style: {\n        fontSize: \"1.2rem\",\n        border: \"1px solid gray\",\n        backgroundColor: \"#8180a6\",\n      },\n    },\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Content</title>\n      </Helmet>\n      <LayoutPage>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card my-4\">\n              <div className=\"card-header p-0 position-relative mt-n4 mx-3 z-index-2\">\n                <div\n                  style={{\n                    backgroundColor: \"#46456e\",\n                  }}\n                  className=\" shadow-primary border-radius-lg pt-4 pb-3\"\n                >\n                  <div className=\"d-flex ps-3\">\n                    <i\n                      style={{ color: \"#fff\", cursor: \"pointer\" }}\n                      className=\"fa fa-arrow-left fs-4\"\n                      onClick={() => {\n                        navigate(\"/dashboard\");\n                      }}\n                    ></i>\n                    <h6 className=\"text-white text-capitalize ps-4 \">\n                      CONTENT\n                    </h6>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-body px-0 pb-2\">\n                <div className=\"p-4\">\n                  <div className=\"input-group input-group-dynamic\">\n                    &nbsp; &nbsp;\n                  </div>\n                  {/* <h1>Sport Category</h1> */}\n                  <div className=\"table-responsive p-0\">\n                    <DataTable\n                      columns={columns}\n                      data={categoryData}\n                      progressPending={loading}\n                      pagination\n                      paginationServer\n                      paginationTotalRows={totalRows}\n                      onChangeRowsPerPage={handlePerRowsChange}\n                      onChangePage={handlePageChange}\n                      sortServer\n                      onRowClicked={handleStatus}\n                      customStyles={customStyle}\n\n                      // onSort={handleSort}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </LayoutPage>\n    </>\n  );\n}\n\nexport default Content;\n"],"names":["location","useLocation","loading","setLoading","useState","categoryData","setCategoryData","totalRows","setTotalRows","pageNumber","setPageNumber","perPage","setperPage","id","setId","navigate","useNavigate","handleContentEdit","e","console","log","target","parentNode","concat","columns","name","selector","row","pageHeading","_jsx","onClick","_id","title","style","cursor","children","className","getCategoryData","useCallback","async","res","axios","data","length","error","useEffect","state","msg","message","window","history","replaceState","document","pathname","replace","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","_jsxs","_Fragment","Helmet","LayoutPage","backgroundColor","color","DataTable","progressPending","pagination","paginationServer","paginationTotalRows","onChangeRowsPerPage","newPerPage","page","onChangePage","sortServer","onRowClicked","customStyles","header","border","headRow","fontSize","rows"],"sourceRoot":""}