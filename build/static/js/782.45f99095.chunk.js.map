{"version":3,"file":"static/js/782.45f99095.chunk.js","mappings":"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","sources":["components/pages/category/Prediction.jsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport LayoutPage from \"../Layout\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport DataTable from \"react-data-table-component\";\nimport { toast } from \"react-toastify\";\n\nconst Prediction = () => {\n  const location = useLocation();\n  const params = useParams();\n  const [row, setRow] = useState([]);\n  const [categoryData, setCategoryData] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [pageSize, setPageSize] = useState(10);\n  const [pageNumber, setPageNumber] = useState(1);\n  const navigate = useNavigate();\n\n  const handleCloseButton = () => {\n    navigate(-1);\n  };\n\n  const handlePageChange = (number) => {\n    setPageNumber(number);\n  };\n\n  const handlePerRowsChange = (number) => {\n    setPageSize(number);\n  };\n  const getCategoryData = useCallback(async () => {\n    try {\n      setLoading(true);\n      axios\n        .get(\n          `/admin/gamepredictionsList?pageNumber=${pageNumber}&pageSize=${pageSize}&sportsCategory=${params.id}`\n        )\n        .then((res) => res.data.data)\n        .then((data) => {\n          setCategoryData(data.result);\n          setRow(data);\n          setLoading(false);\n        });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }, [pageSize, pageNumber]);\n\n  useEffect(() => {\n    getCategoryData();\n    if (location.state) {\n      let msg = location.state.message;\n      window.history.replaceState({}, document.title);\n      navigate(location.pathname, { replace: true });\n      toast(msg, {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        type: \"success\",\n      });\n    }\n  }, [location, getCategoryData]);\n\n  //Table collumns\n  const columns = [\n    {\n      name: \"Date\",\n      selector: (row) => row.date.substring(0, 10),\n    },\n    {\n      name: \"Predicted Winner\",\n      selector: (row) => row.predictedWinner,\n    },\n    {\n      name: \"Predicted Loser\",\n      selector: (row) => row.predictedLoser,\n    },\n    {\n      name: \"Win Prob\",\n      selector: (row) => row.winProb.toFixed(3),\n    },\n    {\n      name: \"Tie Prob\",\n      selector: (row) => row.tieProb.toFixed(3),\n    },\n    {\n      name: \"Algo Margin\",\n      selector: (row) => row.algoMargin.toFixed(3),\n    },\n  ];\n\n  const customStyle = {\n    header: {\n      style: {\n        border: \"1px solid gray\",\n      },\n    },\n    headRow: {\n      style: {\n        fontSize: \"1.2rem\",\n        border: \"1px solid gray\",\n        backgroundColor: \"#8180a6\",\n      },\n    },\n    rows: {\n      style: {\n        fontSize: \"1.2rem\",\n        // fontWeight:\n        border: \"1px solid gray\",\n      },\n    },\n    pagination: {\n      style: {\n        fontSize: \"1.2rem\",\n        border: \"1px solid gray\",\n        backgroundColor: \"#8180a6\",\n      },\n    },\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Category Management</title>\n      </Helmet>\n      <LayoutPage>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card my-4\">\n              <div className=\"card-header p-0 position-relative mt-n4 mx-3 z-index-2\">\n                <div\n                  style={{\n                    backgroundColor: \"#46456e\",\n                  }}\n                  className=\" shadow-primary border-radius-lg pt-0 pb-3\"\n                >\n                  <h6 className=\"text-white text-capitalize ps-3 custom-card-heading\">\n                    <div className=\"d-flex justify-content-between align-item-center px-4\">\n                      {row.sportName} Prediction{\" \"}\n                      <i\n                        className=\"fa fa-close fonts\"\n                        onClick={handleCloseButton}\n                        style={{ cursor: \"pointer\" }}\n                      ></i>\n                    </div>\n                  </h6>\n                </div>\n              </div>\n              <div className=\"card-body px-0 pb-2\">\n                <div className=\"p-4\">\n                  <div className=\"input-group input-group-dynamic\">\n                    &nbsp; &nbsp;\n                  </div>\n                  {/* <h1>Sport Category</h1> */}\n                  <div className=\"table-responsive p-0\">\n                    <DataTable\n                      columns={columns}\n                      data={categoryData}\n                      progressPending={loading}\n                      paginationServer\n                      paginationTotalRows={row.total}\n                      onChangeRowsPerPage={handlePerRowsChange}\n                      onChangePage={handlePageChange}\n                      sortServer\n                      pagination\n                      // onSort={handleSort}\n                      customStyles={customStyle}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </LayoutPage>\n    </>\n  );\n};\n\nexport default Prediction;\n"],"names":["Prediction","location","useLocation","params","useParams","row","setRow","useState","categoryData","setCategoryData","loading","setLoading","pageSize","setPageSize","pageNumber","setPageNumber","navigate","useNavigate","getCategoryData","useCallback","async","axios","concat","id","then","res","data","result","error","console","log","useEffect","state","msg","message","window","history","replaceState","document","title","pathname","replace","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","_jsxs","_Fragment","children","_jsx","Helmet","LayoutPage","className","style","backgroundColor","sportName","onClick","handleCloseButton","cursor","DataTable","columns","name","selector","date","substring","predictedWinner","predictedLoser","winProb","toFixed","tieProb","algoMargin","progressPending","paginationServer","paginationTotalRows","total","onChangeRowsPerPage","number","onChangePage","sortServer","pagination","customStyles","header","border","headRow","fontSize","rows"],"sourceRoot":""}